import json
import urllib2


class AtomiaClient():
    """The AtomiaClient plugs in on the json API from atomiadns.
    """

    def __init__(self, url, email, password):
        """Initalizes the AtomiaClient Object,

        The main task for AtomiaClient is to provide all possible API functions that can be executed on the atomiadns soap api.
        We however do not use the SOAP implementation but the json implementation.

        :param url: URL for the atomiadns.json entrypoint
        :param email: email for the user, remember for admin functions one needs the admin email
        :param password: password for the user
        """
        self.url = url
        self.email = email
        self.password = password

    def request(self, method, data):
        req = urllib2.Request(url=self.url + "/" + method)
        req.add_header('X-Auth-Username', self.email)
        req.add_header('X-Auth-Password', self.password)
        req.add_data(data)

        try:
            response = urllib2.urlopen(req)
            return response.read()
        except urllib2.URLError, e:
            return e.read()

    def process_response(self, response):
        return response
    {% for key,val in config.iteritems() %}
    def {{ key }}(self{% if val.args %}{%for arg in val.args%}, {{ arg }}{%endfor%}{% endif %}):
        """{{ val.docstring }}
        """
        arguments = [{% if val.args %}{% for arg in val.args %}{{ arg }},{% endfor %}{% endif %}]
        data = json.dumps(arguments)
        response = self.request("{{ key }}", data)
        return self.process_response(response)
    {% endfor %}
